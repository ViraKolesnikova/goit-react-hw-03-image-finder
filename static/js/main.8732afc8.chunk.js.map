{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/LoaderContainer/LoaderContainer.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/LoaderContainer/LoaderContainer.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","getInputValue","event","setState","target","value","searchImages","preventDefault","trim","props","onSubmit","resetInput","toast","warn","className","styles","Header","SearchForm","this","type","SearchFormBtn","size","color","SearchFormBtnLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","item","onImageClick","onClick","ImageGalleryItemImage","src","webformatURL","alt","tags","ImageGallery","data","onOpenModal","map","id","modalRoot","document","querySelector","Modal","onKeyDownClose","e","code","onClose","onOverlayClose","currentTarget","window","addEventListener","removeEventListener","image","createPortal","Overlay","largeImageURL","Button","onLoadMoreBtn","LoaderContainer","Container","Loader","height","width","App","images","page","searchValue","loading","total","showModal","modalImage","updateState","keyWord","makeFetch","prevSearchValue","fetch","then","response","json","hits","length","error","catch","console","finally","loadMore","openModal","imageObj","find","hideModal","prevProps","prevState","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8732afc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3m6ho\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3k9EH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3ElvA\",\"Modal\":\"Modal_Modal__1a87T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"LoaderContainer_Container__3IkPm\",\"Loader\":\"LoaderContainer_Loader__10EMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1WigC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__ukqOU\"};","import { Component } from 'react';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport styles from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    inputValue: '',\n  };\n\n  getInputValue = event => {\n    this.setState({ inputValue: event.target.value });\n  };\n\n  searchImages = event => {\n    event.preventDefault();\n    const { inputValue } = this.state;\n    if (inputValue.trim()) {\n      this.props.onSubmit(inputValue);\n      this.resetInput();\n    } else {\n      toast.warn('Enter word into search line!');\n    }\n  };\n\n  resetInput = () => {\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.Header}>\n        <form className={styles.SearchForm} onSubmit={this.searchImages}>\n          <button type=\"submit\" className={styles.SearchFormBtn}>\n            <AiOutlineSearch size=\"2em\" color=\"darkgrey\" />\n            <span className={styles.SearchFormBtnLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            value={this.state.inputValue}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.getInputValue}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import styles from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ item, onImageClick }) {\n  return (\n    <li className={styles.ImageGalleryItem} onClick={onImageClick}>\n      <img\n        className={styles.ImageGalleryItemImage}\n        src={item.webformatURL}\n        alt={item.tags}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  item: PropTypes.shape({\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }),\n  onImageClick: PropTypes.func.isRequired,\n};\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nimport styles from './ImageGallery.module.css';\n\nexport default function ImageGallery({ data, onOpenModal }) {\n  return (\n    <ul className={styles.ImageGallery}>\n      {data.map(item => (\n        <ImageGalleryItem\n          item={item}\n          onImageClick={onOpenModal}\n          key={item.id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onOpenModal: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    image: PropTypes.shape({\n      largeImageURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }).isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDownClose);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDownClose);\n  }\n\n  onKeyDownClose = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n    return;\n  };\n\n  onOverlayClose = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n    return;\n  };\n\n  render() {\n    const { image } = this.props;\n\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.onOverlayClose}>\n        <div className={styles.Modal}>\n          <img src={image.largeImageURL} alt={image.tags} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import PropTypes from 'prop-types';\n\nimport styles from './Button.module.css';\n\nexport default function Button({ onLoadMoreBtn }) {\n  return (\n    <button className={styles.Button} type=\"button\" onClick={onLoadMoreBtn}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMoreBtn: PropTypes.func.isRequired,\n};\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nimport styles from './LoaderContainer.module.css';\n\nexport default function LoaderContainer() {\n  return (\n    <div className={styles.Container}>\n      <Loader\n        className={styles.Loader}\n        type=\"Circles\"\n        color=\"rgb(91, 202, 124)\"\n        height={100}\n        width={100}\n      />\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport LoaderContainer from './components/LoaderContainer';\n\nclass App extends Component {\n  state = {\n    images: null,\n    page: 1,\n    searchValue: '',\n    loading: false,\n    total: 0,\n    showModal: false,\n    modalImage: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchValue !== this.state.searchValue) {\n      this.makeFetch(prevState.searchValue);\n    }\n    if (prevState.page < this.state.page) {\n      this.makeFetch(prevState.searchValue);\n    }\n  }\n\n  updateState = keyWord => {\n    const { searchValue } = this.state;\n    if (searchValue !== keyWord) {\n      this.setState({ page: 1, searchValue: keyWord });\n    }\n  };\n\n  makeFetch = prevSearchValue => {\n    const { page, searchValue } = this.state;\n    this.setState({ loading: true });\n\n    fetch(\n      `https://pixabay.com/api/?key=23945532-d85dbc41bbe7fd0346797d44d&q=${searchValue}&image_type=photo&page=${page}&per_page=12&orientation=horizontal`,\n    )\n      .then(response => response.json())\n      .then(data => {\n        if (data.hits.length === 0) {\n          toast.error('Error! Nothing was found.');\n          return;\n        }\n        prevSearchValue === searchValue\n          ? this.setState(({ images }) => ({\n              images: [...images, ...data.hits],\n            }))\n          : this.setState({ images: data.hits, total: data.total });\n      })\n      .catch(console.error())\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  loadMore = e => {\n    this.setState(({ page }) => ({ page: page + 1 }));\n  };\n\n  openModal = e => {\n    const { images } = this.state;\n    e.preventDefault();\n    this.setState({ showModal: true });\n    const imageObj = images.find(image => e.target.src === image.webformatURL);\n    this.setState({ modalImage: imageObj });\n  };\n\n  hideModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { images, loading, total, showModal, modalImage } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.updateState} />\n        <ToastContainer autoClose={3000} />\n        {loading && <LoaderContainer />}\n        {images && (\n          <>\n            <ImageGallery data={images} onOpenModal={this.openModal} />\n            {images.length < total && <Button onLoadMoreBtn={this.loadMore} />}\n          </>\n        )}\n        {showModal && <Modal image={modalImage} onClose={this.hideModal} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Searchbar_Header__hPaXd\",\"SearchForm\":\"Searchbar_SearchForm__FwmV8\",\"SearchFormBtn\":\"Searchbar_SearchFormBtn__2wY3x\",\"SearchFormBtnLabel\":\"Searchbar_SearchFormBtnLabel__3hI8Q\",\"SearchFormInput\":\"Searchbar_SearchFormInput__nTxBG\"};"],"sourceRoot":""}